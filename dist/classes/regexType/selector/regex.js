var _createClass=function(){function a(a,b){for(var c,d=0;d<b.length;d++)c=b[d],c.enumerable=c.enumerable||!1,c.configurable=!0,'value'in c&&(c.writable=!0),Object.defineProperty(a,c.key,c)}return function(b,c,d){return c&&a(b.prototype,c),d&&a(b,d),b}}(),_get=function a(b,c,d){null===b&&(b=Function.prototype);var e=Object.getOwnPropertyDescriptor(b,c);if(e===void 0){var f=Object.getPrototypeOf(b);return null===f?void 0:a(f,c,d)}if('value'in e)return e.value;var g=e.get;return void 0===g?void 0:g.call(d)};function _defineProperty(a,b,c){return b in a?Object.defineProperty(a,b,{value:c,enumerable:!0,configurable:!0,writable:!0}):a[b]=c,a}function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError('Cannot call a class as a function')}function _possibleConstructorReturn(a,b){if(!a)throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called');return b&&('object'==typeof b||'function'==typeof b)?b:a}function _inherits(a,b){if('function'!=typeof b&&null!==b)throw new TypeError('Super expression must either be null or a function, not '+typeof b);a.prototype=Object.create(b&&b.prototype,{constructor:{value:a,enumerable:!1,writable:!0,configurable:!0}}),b&&(Object.setPrototypeOf?Object.setPrototypeOf(a,b):a.__proto__=b)}var DistinctionRegexType=require('../prototype').DistinctionRegexType,REGEX=require('./constants').REGEX,POSITIVE_REGEX=require('./constants').POSITIVE_REGEX,REGEX_KEY=require('./constants').REGEX_KEY,REGEX_VALUES=require('./constants').REGEX_VALUES,_distinctions={match:'positiveRegex',noMatch:'negativeRegex'},RegexRegexType=function(a){function b(){_classCallCheck(this,b);var a=_possibleConstructorReturn(this,(b.__proto__||Object.getPrototypeOf(b)).call(this,'REGEX',REGEX,POSITIVE_REGEX,_distinctions));return a._REGEX_KEY=REGEX_KEY,a._REGEX_VALUES=REGEX_VALUES,a}return _inherits(b,a),_createClass(b,[{key:'getMatches',value:function getMatches(a){return _get(b.prototype.__proto__||Object.getPrototypeOf(b.prototype),'getMatches',this).call(this,a)[0]}},{key:'getRegexKey',value:function getRegexKey(a){return a.match(this._REGEX_KEY)[0]}},{key:'getRegexValues',value:function getRegexValues(a){return a.match(this._REGEX_VALUES)[0].slice(1).split('|')}},{key:'getPrimitive',value:function getPrimitive(a){return _defineProperty({},this.getDistinction(a),_defineProperty({},this.getRegexKey(a),this.getRegexValues(a)))}}]),b}(DistinctionRegexType);module.exports=RegexRegexType;